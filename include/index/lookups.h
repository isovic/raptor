/*
 * lookups.h
 *
 *  Created on: Oct 04, 2017
 *      Author: Ivan Sovic
 */

#ifndef SRC_TYPES_LOOKUPS_H_
#define SRC_TYPES_LOOKUPS_H_

namespace mindex {

const int8_t nuc_to_twobit[256] = {
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 0 - 15
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 16 - 31
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 32 - 47
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 48 - 63
    4, 0, 4, 1,   4, 4, 4, 2,   4, 4, 4, 4,   4, 4, 4, 4,  // 64 - 79 (A, C, G)
    4, 4, 4, 4,   3, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 80 - 95 (T)
    4, 0, 4, 1,   4, 4, 4, 2,   4, 4, 4, 4,   4, 4, 4, 4,  // 96 - 111
    4, 4, 4, 4,   3, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 112 - 127
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 128 - 143
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 144 - 159
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 160 - 176
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 176 - 191
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 192 - 208
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 208 - 223
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 224 - 239
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4  // 240 - 256
};

const int8_t nuc_to_twobit_complement[256] = {
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 0 - 15
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 16 - 31
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 32 - 47
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 48 - 63
    4, 3, 4, 2,   4, 4, 4, 1,   4, 4, 4, 4,   4, 4, 4, 4,  // 64 - 79 (A, C, G)
    4, 4, 4, 4,   0, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 80 - 95 (T)
    4, 3, 4, 2,   4, 4, 4, 1,   4, 4, 4, 4,   4, 4, 4, 4,  // 96 - 111
    4, 4, 4, 4,   0, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 112 - 127
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 128 - 143
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 144 - 159
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 160 - 176
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 176 - 191
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 192 - 208
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 208 - 223
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 224 - 239
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4  // 240 - 256
};

const int8_t twobit_to_nuc[256] = {
    65, 67, 71, 84,   78, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 0 - 15 (A, C, G, T, N)
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 16 - 31
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 32 - 47
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 48 - 63
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 64 - 79
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 80 - 95
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 96 - 111
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 112 - 127
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 128 - 143
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 144 - 159
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 160 - 176
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 176 - 191
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 192 - 208
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 208 - 223
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 224 - 239
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0  // 240 - 256
};

const int8_t nuc_to_complement[256] = {
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 0 - 15
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 16 - 31
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 32 - 47
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 48 - 63
    78, 84, 78, 71,   78, 78, 78, 67,   78, 78, 78, 78,   78, 78, 78, 78,  // 64 - 79 (A, C, G)
    78, 78, 78, 78,   65, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 80 - 95 (T)
    78, 84, 78, 71,   78, 78, 78, 67,   78, 78, 78, 78,   78, 78, 78, 78,  // 96 - 111
    78, 78, 78, 78,   65, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 112 - 127
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 128 - 143
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 144 - 159
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 160 - 176
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 176 - 191
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 192 - 208
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 208 - 223
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 224 - 239
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78  // 240 - 256
};

const int8_t twobit_to_complement[256] = {
    3, 2, 1, 0,   78, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 0 - 15 (A, C, G, T, N)
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 16 - 31
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 32 - 47
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 48 - 63
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 64 - 79
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 80 - 95
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 96 - 111
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 112 - 127
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 128 - 143
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 144 - 159
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 160 - 176
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 176 - 191
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 192 - 208
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 208 - 223
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 224 - 239
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0  // 240 - 256
};

const int8_t is_nuc[256] = {
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 0 - 15
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 16 - 31
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 32 - 47
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 48 - 63
    0, 1, 0, 1,   0, 0, 0, 1,   0, 0, 0, 0,   0, 0, 0, 0,  // 64 - 79 (A, C, G)
    0, 0, 0, 0,   1, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 80 - 95 (T)
    0, 1, 0, 1,   0, 0, 0, 1,   0, 0, 0, 0,   0, 0, 0, 0,  // 96 - 111
    0, 0, 0, 0,   1, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 112 - 127
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 128 - 143
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 144 - 159
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 160 - 176
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 176 - 191
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 192 - 208
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 208 - 223
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 224 - 239
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0  // 240 - 256
};

}

#endif
