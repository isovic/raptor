/*
 * lookups.h
 *
 *  Created on: Oct 04, 2017
 *      Author: Ivan Sovic
 */

#ifndef SRC_TYPES_LOOKUPS_H_
#define SRC_TYPES_LOOKUPS_H_

#include <cstdint>

namespace mindex {

const uint8_t ascii_to_uppercase[256] = {
    0,   1,   2,   3,      4,   5,   6,   7,      8,   9,  10,  11,     12,  13,  14,  15,      // 0 - 16
    16,  17,  18,  19,     20,  21,  22,  23,     24,  25,  26,  27,     28,  29,  30,  31,      // 16 - 32
    32,  33,  34,  35,     36,  37,  38,  39,     40,  41,  42,  43,     44,  45,  46,  47,      // 32 - 48
    48,  49,  50,  51,     52,  53,  54,  55,     56,  57,  58,  59,     60,  61,  62,  63,      // 48 - 64
    64,  65,  66,  67,     68,  69,  70,  71,     72,  73,  74,  75,     76,  77,  78,  79,      // 64 - 80
    80,  81,  82,  83,     84,  85,  86,  87,     88,  89,  90,  91,     92,  93,  94,  95,      // 80 - 96
    96,  65,  66,  67,     68,  69,  70,  71,     72,  73,  74,  75,     76,  77,  78,  79,      // 96 - 112
    80,  81,  82,  83,     84,  85,  86,  87,     88,  89,  90, 123,    124, 125, 126, 127,      // 112 - 128
    128, 129, 130, 131,    132, 133, 134, 135,    136, 137, 138, 139,    140, 141, 142, 143,      // 128 - 144
    144, 145, 146, 147,    148, 149, 150, 151,    152, 153, 154, 155,    156, 157, 158, 159,      // 144 - 160
    160, 161, 162, 163,    164, 165, 166, 167,    168, 169, 170, 171,    172, 173, 174, 175,      // 160 - 176
    176, 177, 178, 179,    180, 181, 182, 183,    184, 185, 186, 187,    188, 189, 190, 191,      // 176 - 192
    192, 193, 194, 195,    196, 197, 198, 199,    200, 201, 202, 203,    204, 205, 206, 207,      // 192 - 208
    208, 209, 210, 211,    212, 213, 214, 215,    216, 217, 218, 219,    220, 221, 222, 223,      // 208 - 224
    224, 225, 226, 227,    228, 229, 230, 231,    232, 233, 234, 235,    236, 237, 238, 239,      // 224 - 240
    240, 241, 242, 243,    244, 245, 246, 247,    248, 249, 250, 251,    252, 253, 254, 255       // 240 - 256
};

const int8_t nuc_to_twobit[256] = {
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 0 - 15
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 16 - 31
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 32 - 47
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 48 - 63
    4, 0, 4, 1,   4, 4, 4, 2,   4, 4, 4, 4,   4, 4, 4, 4,  // 64 - 79 (A, C, G)
    4, 4, 4, 4,   3, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 80 - 95 (T)
    4, 0, 4, 1,   4, 4, 4, 2,   4, 4, 4, 4,   4, 4, 4, 4,  // 96 - 111
    4, 4, 4, 4,   3, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 112 - 127
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 128 - 143
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 144 - 159
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 160 - 176
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 176 - 191
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 192 - 208
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 208 - 223
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 224 - 239
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4  // 240 - 256
};

const int8_t nuc_to_twobit_complement[256] = {
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 0 - 15
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 16 - 31
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 32 - 47
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 48 - 63
    4, 3, 4, 2,   4, 4, 4, 1,   4, 4, 4, 4,   4, 4, 4, 4,  // 64 - 79 (A, C, G)
    4, 4, 4, 4,   0, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 80 - 95 (T)
    4, 3, 4, 2,   4, 4, 4, 1,   4, 4, 4, 4,   4, 4, 4, 4,  // 96 - 111
    4, 4, 4, 4,   0, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 112 - 127
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 128 - 143
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 144 - 159
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 160 - 176
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 176 - 191
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 192 - 208
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 208 - 223
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,  // 224 - 239
    4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4,   4, 4, 4, 4  // 240 - 256
};

const int8_t twobit_to_nuc[256] = {
    65, 67, 71, 84,   78, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 0 - 15 (A, C, G, T, N)
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 16 - 31
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 32 - 47
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 48 - 63
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 64 - 79
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 80 - 95
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 96 - 111
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 112 - 127
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 128 - 143
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 144 - 159
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 160 - 176
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 176 - 191
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 192 - 208
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 208 - 223
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 224 - 239
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0  // 240 - 256
};

const int8_t nuc_to_complement[256] = {
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 0 - 15
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 16 - 31
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 32 - 47
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 48 - 63
    78, 84, 78, 71,   78, 78, 78, 67,   78, 78, 78, 78,   78, 78, 78, 78,  // 64 - 79 (A, C, G)
    78, 78, 78, 78,   65, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 80 - 95 (T)
    78, 84, 78, 71,   78, 78, 78, 67,   78, 78, 78, 78,   78, 78, 78, 78,  // 96 - 111
    78, 78, 78, 78,   65, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 112 - 127
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 128 - 143
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 144 - 159
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 160 - 176
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 176 - 191
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 192 - 208
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 208 - 223
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,  // 224 - 239
    78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78,   78, 78, 78, 78  // 240 - 256
};

const int8_t twobit_to_complement[256] = {
    3, 2, 1, 0,   78, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 0 - 15 (A, C, G, T, N)
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 16 - 31
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 32 - 47
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 48 - 63
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 64 - 79
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 80 - 95
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 96 - 111
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 112 - 127
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 128 - 143
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 144 - 159
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 160 - 176
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 176 - 191
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 192 - 208
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 208 - 223
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 224 - 239
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0  // 240 - 256
};

const int8_t is_nuc[256] = {
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 0 - 15
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 16 - 31
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 32 - 47
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 48 - 63
    0, 1, 0, 1,   0, 0, 0, 1,   0, 0, 0, 0,   0, 0, 0, 0,  // 64 - 79 (A, C, G)
    0, 0, 0, 0,   1, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 80 - 95 (T)
    0, 1, 0, 1,   0, 0, 0, 1,   0, 0, 0, 0,   0, 0, 0, 0,  // 96 - 111
    0, 0, 0, 0,   1, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 112 - 127
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 128 - 143
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 144 - 159
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 160 - 176
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 176 - 191
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 192 - 208
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 208 - 223
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,  // 224 - 239
    0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0,   0, 0, 0, 0  // 240 - 256
};

}

#endif
